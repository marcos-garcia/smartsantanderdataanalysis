/*
 * File: app/store/measureStore.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SSMeasureViewer.store.measureStore', {
    extend: 'Ext.data.Store',

    requires: [
        'SSMeasureViewer.model.Measure',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Array'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: true,
            model: 'SSMeasureViewer.model.Measure',
            storeId: 'measureStore',
            proxy: {
                type: 'ajax',
                url: '/ssdatarest-0.1.0/measuremap',
                reader: {
                    type: 'array'
                }
            },
            listeners: {
                load: {
                    fn: me.onArraystoreLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onArraystoreLoad: function(store, records, successful, eOpts) {
        if(document.getElementById('mapPanel-innerCt')!=null)
        {
           SSMeasureViewer.getApplication().getController('MapDataController').refreshMapData(store);
        }

    }

});